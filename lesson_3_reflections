When would you want to use a remote repository rather than keeping all your work local?
Its a good idea to have a remote repository so that you have a backup of the work on your local machine. Also if there are multiple people working on the same project then having a remote repository makes it possible for everyone to contribute and share the work.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
There might be changes made by you in the local repository that you need to push into the remote first. An automatic pull might result in having a new commit in your local repository which might include new changes made by others working on the project but not the one you made.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
- Cloning is copying the entire repository along with the commit history. 'Clone' is used when you want to clone a repository on Github server onto your local machine or to clone another repository on your local machine.  
- Fork is used when you want to clone any repository on Github, even that created by some other user onto your Github account.
- Branches are used when you want to create slightly different versions of the project in terms of functionality. Branches can be created on local machines or directly on the Github repository. 

What is the benefit of having a copy of the last known state of the remote stored locally?
There might be times when you have made some changes (commit) in your local repository which you havent yet pushed to the remote and in mean while another user has made changes (another commit) to the remote repository. Then you can use fetch to update the local copy of the remote branch (origin/master) in your repository while keeping the local master intact. You can then manually merge origin/master and master. Thus the benefit of having a copy of remore stored locally is that you can obtain changes made by other users while not losing the ones made by you.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Collaborating without Git or Github would mean sharing files manually using email with in-line comments pointing out the proposed changes. And that would make it much harder to collaberate, specially if multiple people are working on the same project.